{"meta":{"title":"ZCYBlog","subtitle":null,"description":"ZCY的个人博客网站","author":"ZCY","url":"https://zcyblog.tk","root":"/"},"pages":[{"title":"","date":"2022-05-20T23:34:35.000Z","updated":"2022-05-20T15:41:29.258Z","comments":false,"path":"about/index.html","permalink":"https://zcyblog.tk/about/index.html","excerpt":"","text":""}],"posts":[{"title":"前端上传封装","slug":"前端上传封装","date":"2023-02-26T14:52:20.000Z","updated":"2023-03-01T10:40:44.795Z","comments":true,"path":"2023/02/26/前端上传封装/","link":"","permalink":"https://zcyblog.tk/2023/02/26/%E5%89%8D%E7%AB%AF%E4%B8%8A%E4%BC%A0%E5%B0%81%E8%A3%85/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198/** * 点击上传 | 拖拽上传 * 单文件 | 多文件 | 文件夹 */class uploader &#123; el = null pattern = null options = null acceptType = null callback = null /** * @param &#123; Object &#125; config * @param &#123; HTMLElement &#125; config.el * @param &#123; &quot;Click&quot;|&quot;Drag&quot; &#125; config.mode * @param &#123; &quot;SingleFile&quot;|&quot;MultiFile&quot;|&quot;Folder&quot; &#125; config.pattern * @param &#123; String &#125; config.acceptType * @param &#123; Object &#125; config.options * @param &#123;Function&#125; config.options.onDragEnter * @param &#123;Function&#125; config.options.onDragOver * @param &#123;Function&#125; config.options.onDragLeave * @param &#123;Function&#125; config.options.onDrop * @param &#123;Function&#125; callback */ constructor(config, callback) &#123; const &#123; el, mode, pattern, acceptType, options &#125; = config if (!el) throw new Error(&quot;no element!&quot;) this.el = el this.pattern = pattern || &quot;SingleFile&quot; this.options = options || &#123;&#125; this.acceptType = acceptType || &quot;&quot; this.callback = callback switch (mode || &quot;Click&quot;) &#123; case &quot;Click&quot;: this.clickModeFn() break case &quot;Drag&quot;: this.dragModeFn() break default: throw new Error(&quot;mode not accepted!&quot;) &#125; &#125; watchElRemove(callback) &#123; const parentNode = this.el.parentNode const observer = new MutationObserver((mutationsList, observer) =&gt; &#123; mutationsList.forEach(() =&gt; &#123; if (!parentNode.contains(this.el)) &#123; callback &amp;&amp; callback() observer.disconnect() &#125; &#125;) &#125;) observer.observe(parentNode, &#123; childList: true &#125;) &#125; clickModeFn() &#123; const inputFile = document.createElement(&quot;input&quot;) inputFile.setAttribute(&quot;type&quot;, &quot;file&quot;) this.acceptType &amp;&amp; inputFile.setAttribute(&quot;accept&quot;, this.acceptType) inputFile.style.display = &quot;none&quot; switch (this.pattern) &#123; case &quot;SingleFile&quot;: break case &quot;MultiFile&quot;: inputFile.setAttribute(&quot;multiple&quot;, true) break case &quot;Folder&quot;: inputFile.setAttribute(&quot;webkitdirectory&quot;, true) break default: throw new Error(&quot;pattern not accepted!&quot;) &#125; const changeHandle = (&#123; target &#125;) =&gt; &#123; let values = null switch (this.pattern) &#123; case &quot;SingleFile&quot;: values = &#123; file: target.files[0], path: target.files[0].name &#125; break case &quot;MultiFile&quot;: values = Array.from(target.files, item =&gt; (&#123; file: item, path: item.name &#125;)) break case &quot;Folder&quot;: values = Array.from(target.files, item =&gt; (&#123; file: item, path: item.webkitRelativePath &#125;)) break &#125; this.callback &amp;&amp; this.callback(values) target.value = &quot;&quot; &#125; inputFile.addEventListener(&quot;change&quot;, changeHandle) this.el.parentNode.appendChild(inputFile) const clickHandle = () =&gt; &#123; inputFile.click() &#125; this.el.addEventListener(&quot;click&quot;, clickHandle) this.watchElRemove(() =&gt; &#123; inputFile.removeEventListener(&quot;change&quot;, changeHandle) inputFile.remove() this.el.removeEventListener(&quot;click&quot;, clickHandle) &#125;) &#125; dragModeFn() &#123; const &#123; onDragEnter, onDragOver, onDragLeave, onDrop &#125; = this.options const getFileFromFolder = (entry, path) =&gt; &#123; return new Promise((resolve, reject) =&gt; &#123; if (entry.isFile) &#123; entry.file(file =&gt; &#123; resolve([ &#123; file: new File([file], file.name, &#123; type: file.type &#125;), path: path + file.name &#125; ]) &#125;) &#125; else if (entry.isDirectory) &#123; const dirReader = entry.createReader() dirReader.readEntries(async entries =&gt; &#123; const files = [] for (const item of entries) &#123; files.push(...(await getFileFromFolder(item, path + entry.name + &quot;/&quot;) || [])) &#125; resolve(files) &#125;) &#125; else &#123; reject(&quot;The file type is not supported!&quot;) &#125; &#125;) &#125; const AfterDropFn = async e =&gt; &#123; const files = [] for (const item of e.dataTransfer.items) &#123; item.getAsEntry = (function () &#123; return item.getAsEntry || item.webkitGetAsEntry &#125;)() const entry = item.getAsEntry() files.push(...(await getFileFromFolder(entry, &quot;&quot;) || [])) &#125; this.callback &amp;&amp; this.callback(files) &#125; var canOverBehavior = true const DragEnterFn = e =&gt; &#123; e.preventDefault() onDragEnter &amp;&amp; onDragEnter(e.target) canOverBehavior = true &#125; const DragOverFn = e =&gt; &#123; e.preventDefault() if (!canOverBehavior) return onDragOver &amp;&amp; onDragOver(e.target) canOverBehavior = false &#125; const DragLeaveFn = e =&gt; &#123; e.preventDefault() onDragLeave &amp;&amp; onDragLeave(e.target) canOverBehavior = true &#125; const DropFn = async e =&gt; &#123; e.preventDefault() onDrop &amp;&amp; onDrop(e.target) await AfterDropFn(e) canOverBehavior = true &#125; this.el.addEventListener(&#x27;dragenter&#x27;, DragEnterFn) this.el.addEventListener(&#x27;dragover&#x27;, DragOverFn) this.el.addEventListener(&#x27;dragleave&#x27;, DragLeaveFn) this.el.addEventListener(&quot;drop&quot;, DropFn) this.watchElRemove(() =&gt; &#123; this.el.removeEventListener(&#x27;dragenter&#x27;, DragEnterFn) this.el.removeEventListener(&#x27;dragover&#x27;, DragOverFn) this.el.removeEventListener(&#x27;dragleave&#x27;, DragLeaveFn) this.el.removeEventListener(&quot;drop&quot;, DropFn) &#125;) &#125;&#125;export default uploader","categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://zcyblog.tk/categories/JavaScript/"}],"tags":[{"name":"upload","slug":"upload","permalink":"https://zcyblog.tk/tags/upload/"}]},{"title":"Hello World","slug":"Hello-World","date":"2023-02-25T18:02:25.000Z","updated":"2023-02-25T10:05:13.981Z","comments":true,"path":"2023/02/26/Hello-World/","link":"","permalink":"https://zcyblog.tk/2023/02/26/Hello-World/","excerpt":"","text":"今天开始学习咯，加油！ 这里是 ZCY 的笔记、代码回收站…","categories":[],"tags":[]}],"categories":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://zcyblog.tk/categories/JavaScript/"}],"tags":[{"name":"upload","slug":"upload","permalink":"https://zcyblog.tk/tags/upload/"}]}